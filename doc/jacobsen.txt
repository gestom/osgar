Jacobsen Eclipse 322 CAN Bus Communication Protocol
===================================================

(based on recordings on 13-3-2018)

CAN speed: 250k

All messages except 0x80 (SYNC) are 8 bytes long. There is mix of standard
and extended address schema. There were 30 types of messages detected during
approximately 30 minutes recording, where most of them are emited only
after start of engine.


0x18c - Engine On/Off
----------------------
Off: 0 0 0 0 0 0 0 0
On:  1 0 0 0 0 0 0 0




-----------------------------------------------------------------

martind@lenovo2 MINGW32 /m/czu/jacobsen/can-data
$ cat *.log | awk '{print $4, $5, $6, $7;}' | sort | uniq -c
     56
      4 Ext 1595 196564 8
      4 Ext 1595 196565 8
      2 Ext 1595 196566 8
      4 Ext 1595 196579 8
  67432 Ext 1599 199892 8
  67640 Ext 1599 200149 8
   1074 Ext 1599 202452 8
  42810 Ext 1599 203747 8
   1086 Ext 1599 205269 8
   2644 Ext 1599 208086 8
   1080 Ext 1599 225492 8
   1084 Ext 1599 225749 8
   1078 Ext 1599 228052 8
   1072 Ext 1599 229347 8
   1078 Ext 1599 230869 8
   2154 Ext 1599 251092 8
   1080 Ext 1599 251349 8
   1078 Ext 1599 253652 8
  53948 St 128 0 0
      4 St 133 0 8
   8416 St 1413 0 8
   2132 St 1416 0 8
   8436 St 1541 0 8
   2136 St 1544 0 8
    266 St 1545 0 8
      4 St 1771 0 8
      4 St 1777 0 8
  53828 St 392 0 8
  53952 St 396 0 8

--------------------------

# 128 = 0x80 ... probably SYNC

--------------------------

# 133 = 0x85

$ cat *.log | awk '{if($5==133){print $0;}}'
1       58066      15:36:12.560 St      133     0       8       16      98      1       0       0       0       1       0
3       161973     15:41:27.765 St      133     0       8       16      98      1       0       0       0       1       0

--------------------------

# 1413 = 0x585

$ cat `cat files.txt` | awk '{if($5==1413){print $8, $9, $10, $11, $12, $13, $14, $15;}}' | uniq -c
   1326 96 37 32 3 0 0 0 0
      1 79  9 32 3 6 0 0 0
   1343 96 37 32 3 0 0 0 0
      1 79  9 32 3 6 0 0 0
   1537 96 37 32 3 0 0 0 0

--------------------------

# 1416 = 0x588

$ cat `cat files.txt` | awk '{if($5==1416){print $8, $9, $10, $11, $12, $13, $14, $15;}}' | sort | uniq -c
    107 75 112 32 32 0 0 0 0
     10 75 112 32 32 1 0 0 0
      9 75 112 32 32 2 0 0 0
      3 75 112 32 32 3 0 0 0
      2 75 112 32 32 4 0 0 0
      2 75 112 32 32 5 0 0 0
     33 75 64  32 2 13 0 0 0
     99 75 64  32 2 14 0 0 0
      2 75 64  32 2 15 0 0 0
     63 75 65  32 2 20 0 0 0
     45 75 65  32 2 21 0 0 0
     25 75 65  32 2 22 0 0 0
      1 79 9   32 3 5 0 0 0
    134 96 37  32 5 0 0 0 0
    531 96 37  32 6 0 0 0 0

... variable, looks like blocks:
      1 75 65 32 2 20 0 0 0
      1 75 64 32 2 13 0 0 0
      2 96 37 32 6 0 0 0 0
      1 96 37 32 5 0 0 0 0
      2 96 37 32 6 0 0 0 0
      1 75 112 32 32 0 0 0 0

      1 75 65 32 2 20 0 0 0
      1 75 64 32 2 14 0 0 0
      2 96 37 32 6 0 0 0 0
      1 96 37 32 5 0 0 0 0
      2 96 37 32 6 0 0 0 0
      1 75 112 32 32 0 0 0 0

      1 75 65 32 2 20 0 0 0

--------------------------

# 1541 = 0x605

martind@lenovo2 MINGW32 /m/czu/jacobsen/selected
$ cat `cat files.txt` | awk '{if($5==1541){print $8, $9, $10, $11, $12, $13, $14, $15;}}' | uniq -c
   1322 43 37 32 3 0 0 0 0
      1 64 9  32 3 0 0 0 0
      8 43 37 32 3 0 0 0 0
      1 64 9  32 3 0 0 0 0
   1339 43 37 32 3 0 0 0 0
      1 64 9  32 3 0 0 0 0
      8 43 37 32 3 0 0 0 0
      1 64 9  32 3 0 0 0 0
    362 43 37 32 3 0 0 0 0
    388 43 37 32 3 69 1 0 0
    156 43 37 32 3 144 1 0 0
    548 43 37 32 3 69 1 0 0
     44 43 37 32 3 144 1 0 0
     39 43 37 32 3 69 1 0 0

--------------------------

# 1544 = 0x608

$ cat `cat files.txt` | awk '{if($5==1544){print $1, $8, $9, $10, $11, $12, $13, $14, $15;}}' | uniq -c 
      1 7 43 37 32 6 90 0 0 0
      1 7 43 37 32 5 0 6 0 0
      1 7 64 112 32 32 0 0 0 0
      1 7 64 65 32 2 0 0 0 0
      1 7 64 64 32 2 0 0 0 0
      1 7 64 9 32 3 0 0 0 0
      1 7 43 37 32 6 180 0 0 0
      1 7 64 112 32 32 0 0 0 0
      1 7 43 37 32 6 14 1 0 0
      1 7 64 65 32 2 0 0 0 0
      1 7 64 64 32 2 0 0 0 0
...

variable, sending data after engine was started

--------------------------

# 1545 = 0x609

      6 7  64 9 32 3 0 0 0 0
     18 8  64 9 32 3 0 0 0 0
     26 9  64 9 32 3 0 0 0 0
     23 10 64 9 32 3 0 0 0 0
     25 11 64 9 32 3 0 0 0 0
     25 12 64 9 32 3 0 0 0 0
      6 13 64 9 32 3 0 0 0 0
      4 14 64 9 32 3 0 0 0 0

... constant value for engine on

--------------------------

# 1771 = 0x6eb

$ cat `cat files.txt` | awk '{if($5==1771){print $1, $8, $9, $10, $11, $12, $13, $14, $15;}}' | uniq -c
      1 1  14 0 0 0 0 0 0 0
      1 3  14 0 0 0 0 0 0 0

--------------------------

# 1777 = 0x6f1

$ cat `cat files.txt` | awk '{if($5==1777){print $1, $8, $9, $10, $11, $12, $13, $14, $15;}}' | uniq -c
      1 1  14 0 0 0 0 0 0 0
      1 3  14 0 0 0 0 0 0 0

--------------------------

# 392 = 0x188

- variable for test 11 and 12, which is motion ... encoders?

      7 11  73 0 0 0 0 0     8 0
      1 11  73 0 0 0 252 255 8 0
      1 11  73 0 0 0 255 255 8 0
      2 11  73 0 0 0 0 0     8 0
      1 11  73 0 56 1 0 0    8 0
      1 11  73 0 66 1 0 0    8 0
      1 11  73 0 79 1 13 0   8 0
      1 11  73 0 83 1 3 0    8 0
      1 11  73 0 93 1 8 0    8 0
      1 11  73 0 100 1 17 0 8 0
      1 11  73 0 107 1 23 0 8 0
      1 11  73 0 121 1 22 0 8 0
      1 11  73 0 135 1 34 0 8 0
      1 11  73 0 157 1 22 0 8 0
      1 11  73 0 179 1 18 0 8 0

... probably 16bit

$ cat 11_pojezd.log | awk '{if($5==392){print $8, $9;}}' | sort | uniq -c
    799 17 0
     65 25 0
    233 73 0
    126 89 0
i.e. first byte looks like bit mask 0x59
>>> hex(17), hex(25), hex(73), hex(89)
('0x11', '0x19', '0x49', '0x59')

second byte is always zero (so far)

next two bytes define LSB 16bit integer:
$ cat 11_pojezd.log | awk '{if($5==392){print $10, $11;}}' | uniq -c | less
    515 0 0
      1 56 1  ... strange jump
      1 66 1
      1 79 1
      1 83 1
      1 93 1
      1 100 1
      1 107 1
      1 121 1
...
      1 31 1
      1 19 1
      1 7 1
      1 251 0
      1 240 0
      2 237 0
      1 231 0
...
     44 0 0
      1 16 1  ... again fast transition??
      2 22 1
      1 25 1
      1 28 1
...
      1 106 0
      2 54 0
    362 0 0
      2 161 1
      1 168 1
...
      1 70 0
      2 41 0
    112 0 0
      1 11 2  ... even stranger transition ... different meaning? direction
bits?
      1 24 2
      1 36 2

For forward and backward motion:
      1 60 0
      1 51 0
      2 44 0
    199 0 0
      1 136 255
      1 140 255
      1 144 255
... i.e. it looks like signed speed?
(maybe there are not correct times and some messages were dropped?)

      1 206 255
      1 222 255
      2 242 255
     57 0 0
... STOP.

$ cat `cat files.txt` | awk '{if($5==392){print $11;}}' | sort | uniq -c
  26345 0
    149 1
     25 2
      5 254
    390 255
... this looks like most significant byte


next two byte look similar (16bit LSB first)
$ cat 11_pojezd.log | awk '{if($5==392){print $12, $13;}}' | uniq -c | less
      1 249 255
      1 255 255
      4 0 0
      1 13 0
      1 3 0
      1 11 0
...

and the last two bytes are strange again:
cat 11_pojezd.log | awk '{if($5==392){print $14, $15;}}' | uniq -c 
    503 6 0
     94 8 0
     28 4 0
      1 5 0
      3 6 0
      1 7 0
     60 8 0
     50 4 0
      1 5 0
    299 6 0
      1 7 0
     43 8 0
     44 4 0
      1 5 0
     55 6 0
      2 7 0
     37 8 0

$ cat `cat files.txt` | awk '{if($5==392){print $14, $15;}}' | sort | uniq -c
  20256 0 0
     11 1 0
    226 4 0
      6 5 0
   5440 6 0
      6 7 0
    969 8 0

so the last byte is always zero (so far)

--------------------------

# 396 = 0x18c ... Engine On/Off

$ cat `cat files.txt` | awk '{if($5==396){print $1, $8, $9, $10, $11, $12, $13, $14, $15;}}' | uniq -c
  11005 1   0 0 0 0 0 0 0 0
    108 2   0 0 0 0 0 0 0 0
   6168 3   0 0 0 0 0 0 0 0
   1739 4   0 0 0 0 0 0 0 0
    626 5   0 0 0 0 0 0 0 0
    502 6   0 0 0 0 0 0 0 0
    157 7   0 0 0 0 0 0 0 0
    273 7   1 0 0 0 0 0 0 0
    906 8   1 0 0 0 0 0 0 0
   1341 9   1 0 0 0 0 0 0 0
   1167 10  1 0 0 0 0 0 0 0
   1224 11  1 0 0 0 0 0 0 0
   1230 12  1 0 0 0 0 0 0 0
    284 13  1 0 0 0 0 0 0 0
    191 14  1 0 0 0 0 0 0 0
     55 14  0 0 0 0 0 0 0 0

--------------------------


